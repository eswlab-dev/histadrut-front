{"version":3,"sources":["components/Restriction.js","views/ExistingRestrictions.js"],"names":["Restriction","i","restriction","getBoardColumns","editRestriction","deleteRestriction","boardsForDropdown","onSetRestriction","useState","columnsForDropdown","setColumnsForDropdown","edit","delete","board","columns","isLoading","setIsLoading","useEffect","getColumns","a","console","log","onSetLoadState","key","isLoad","className","options","placeholder","onChange","value","column","isDisabled","length","isClearable","isMulti","loading","onClick","e","kind","Button","kinds","TERTIARY","color","colors","NEGATIVE","ExistingRestrictions","account","restrictions","setRestrictions","validateNewRestriction","getRestrictions","utils","newRestriction","data","item","isBoard","newRestrictions","filteredRestrictions","filter","rest","_id","map"],"mappings":"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","file":"static/js/6.3ebdfc73.chunk.js","sourcesContent":["import React, { useEffect, useMemo, useState } from \"react\";\r\nimport Button from \"monday-ui-react-core/dist/Button\";\r\nimport Loader from \"monday-ui-react-core/dist/Loader\";\r\n\r\nimport Select from \"react-select\";\r\nexport default function Restriction({\r\n  i,\r\n  restriction,\r\n  getBoardColumns,\r\n  editRestriction,\r\n  deleteRestriction,\r\n  boardsForDropdown,\r\n  onSetRestriction,\r\n}) {\r\n  const [columnsForDropdown, setColumnsForDropdown] = useState([]);\r\n  const [isLoading, setIsLoading] = useState({\r\n    edit: false,\r\n    delete: false,\r\n    board: false,\r\n    columns: false,\r\n  });\r\n  useEffect(() => {\r\n    if (restriction) {\r\n      getColumns();\r\n      // setRestriction(restriction);\r\n    }\r\n  }, [restriction]);\r\n  const getColumns = async () => {\r\n    const columns = await getBoardColumns(restriction);\r\n    setColumnsForDropdown(columns);\r\n    console.log(`getColumns -> columns`, columns);\r\n  };\r\n  const onSetLoadState = (key, isLoad) => {\r\n    setIsLoading({ ...isLoading, [key]: isLoad });\r\n  };\r\n\r\n  return restriction ? (\r\n    <div className=\"restriction\" key={i}>\r\n      <label className=\"restriction-label\">\r\n        Board\r\n        <Select\r\n          className=\"restriction-select\"\r\n          options={boardsForDropdown}\r\n          placeholder=\"Please choose a board\"\r\n          onChange={(board) => {\r\n            onSetRestriction(i, board, true, onSetLoadState);\r\n          }}\r\n          value={restriction.board}\r\n          isLoading={isLoading?.board}\r\n        />\r\n      </label>\r\n      <label className=\"restriction-label\">\r\n        Columns\r\n        <Select\r\n          className=\"restriction-select\"\r\n          placeholder=\"Please choose mandatory columns\"\r\n          onChange={(column) => {\r\n            onSetRestriction(i, column, false, onSetLoadState);\r\n          }}\r\n          options={columnsForDropdown}\r\n          value={restriction.columns}\r\n          isLoading={isLoading?.columns}\r\n          isDisabled={!columnsForDropdown?.length}\r\n          isClearable\r\n          isMulti\r\n        />\r\n      </label>\r\n      <div className=\"button-div\">\r\n        <Button\r\n          loading={isLoading?.edit}\r\n          onClick={(e) => {\r\n            editRestriction(i, restriction, onSetLoadState);\r\n          }}\r\n        >\r\n          Update\r\n        </Button>\r\n        <Button\r\n          loading={isLoading?.delete}\r\n          kind={Button.kinds.TERTIARY}\r\n          color={Button.colors.NEGATIVE}\r\n          className=\"add-button\"\r\n          onClick={(e) => {\r\n            deleteRestriction(i, onSetLoadState);\r\n          }}\r\n        >\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div className=\"loader-div\">\r\n      <div className=\"loader\">\r\n        <Loader />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Restriction from \"../components/Restriction\";\r\nimport * as utils from \"../services/utils\";\r\n\r\nexport default function ExistingRestrictions({\r\n  getBoardColumns,\r\n  account,\r\n  boardsForDropdown,\r\n  restrictions,\r\n  setRestrictions,\r\n  validateNewRestriction,\r\n  getRestrictions,\r\n}) {\r\n  useEffect(() => {\r\n    if (account) getRestrictions();\r\n  }, [account]);\r\n\r\n  const editRestriction = async (i, restriction, onSetLoadState) => {\r\n    onSetLoadState(\"edit\", true);\r\n    if (validateNewRestriction(restriction)) {\r\n      const newRestriction = (await utils.editRestriction(restriction, account))\r\n        .data;\r\n      restrictions[i] = newRestriction;\r\n      setRestrictions(restrictions);\r\n    }\r\n    onSetLoadState(\"edit\", false);\r\n  };\r\n\r\n  const onSetRestriction = (i, item, isBoard, onSetLoadState) => {\r\n    if (isBoard) {\r\n      onSetLoadState(\"board\", true);\r\n      const newRestrictions = restrictions;\r\n      newRestrictions[i] = { board: item, columns: [] };\r\n      setRestrictions([...newRestrictions]);\r\n      onSetLoadState(\"board\", false);\r\n    } else {\r\n      onSetLoadState(\"columns\", true);\r\n      const newRestrictions = restrictions;\r\n      newRestrictions[i] = { ...restrictions[i], columns: item };\r\n      setRestrictions([...newRestrictions]);\r\n      onSetLoadState(\"columns\", false);\r\n    }\r\n  };\r\n\r\n  const deleteRestriction = async (i, onSetLoadState) => {\r\n    onSetLoadState(\"delete\", true);\r\n    const restriction = restrictions[i];\r\n    const deletedRest = await utils.deleteRestriction(restriction);\r\n    const filteredRestrictions = restrictions.filter(\r\n      (rest) => rest._id !== restriction._id\r\n    );\r\n    onSetLoadState(\"delete\", false);\r\n    setRestrictions([...filteredRestrictions]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"existing-restrictions\">\r\n      {restrictions?.map((restriction, i) => (\r\n        <Restriction\r\n          key={i}\r\n          i={i}\r\n          restriction={restriction}\r\n          getBoardColumns={getBoardColumns}\r\n          editRestriction={editRestriction}\r\n          deleteRestriction={deleteRestriction}\r\n          boardsForDropdown={boardsForDropdown}\r\n          onSetRestriction={onSetRestriction}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}